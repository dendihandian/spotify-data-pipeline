version: '3.8'

volumes:
  postgres-db-volume:
  redis-volume:
  mongo-volume-db:
  mongo-volume-configdb:

services:

######################################################
# AIRFLOW
######################################################

  airflow:
    build: 
      context: ./docker/airflow
      dockerfile: ./Dockerfile
    ports:
      - 8080:8080
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID}
      - SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}
      - REDIS_PASS=${REDIS_AUTH}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASS=${MONGO_PASS}
    volumes:
      - ./docker/airflow/dags:/opt/airflow/dags
    healthcheck:
      test: [ "CMD", "nc", "-z", "airflow", "8080" ]
      timeout: 45s
      interval: 10s
      retries: 10

######################################################
# POSTGRES
######################################################

  postgres:
    build: 
      context: ./docker/postgres
      dockerfile: ./Dockerfile
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s

######################################################
# ADMINER (optional)
######################################################

  adminer:
    build:
      context: './docker/adminer'
      dockerfile: ./Dockerfile
    logging:
      driver: "json-file"
      options:
          max-file: "5"
          max-size: "10m"
    ports:
      - 9000:9000
    environment:
      - ADMINER_DEFAULT_DB_DRIVER=psql
      - ADMINER_DEFAULT_DB_HOST=postgres
      - ADMINER_DEFAULT_DB_NAME=airflow
    healthcheck:
      test: [ "CMD", "nc", "-z", "adminer", "9000" ]
      timeout: 45s
      interval: 10s
      retries: 10
    depends_on:
      - postgres

######################################################
# REDIS
######################################################

  redis:
    build:
      context: ./docker/redis
      dockerfile: ./Dockerfile
    command: --requirepass ${REDIS_AUTH}
    volumes:
        - redis-volume:/data
    ports:
      - 6379:6379

######################################################
# PHPREDISADMIN (optional)
######################################################

  phpredisadmin:
    build:
      context: ./docker/phpredisadmin
      dockerfile: ./Dockerfile
    environment:
      - ADMIN_USER=${PHPREDISADMIN_USER}
      - ADMIN_PASS=${PHPREDISADMIN_PASS}
      - REDIS_1_HOST=redis
      - REDIS_1_PORT=6379
      - REDIS_1_AUTH=${REDIS_AUTH}
    ports:
      - 9987:80
    depends_on:
      - redis

######################################################
# MONGO
######################################################

  mongo:
    build:
      context: ./docker/mongo
      dockerfile: ./Dockerfile
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASS}
    volumes:
      - mongo-volume-db:/data/db
      - mongo-volume-configdb:/data/configdb

######################################################
# MONGO-CLIENT (optional)
######################################################

  mongodb-php-gui:
    build:
      context: ./docker/mongodb-php-gui
      dockerfile: ./Dockerfile
    ports:
      - 5000:5000